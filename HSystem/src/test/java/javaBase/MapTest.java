package javaBase;

import org.apache.xmlbeans.impl.common.ConcurrentReaderHashMap;
import org.junit.Test;

import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;

public class MapTest {

    @Test
    public void hashMapTest(){
        Map a = new HashMap<MapTestVo,String>();

        a.put(new MapTestVo("a"),"a");
        a.put(new MapTestVo("b"),"b");
        a.put(new MapTestVo("c"),"c");
        a.put(new MapTestVo("a1"),"a1");
        a.put(new MapTestVo("b1"),"b1");
        a.put(new MapTestVo("c1"),"c1");
        a.put(new MapTestVo("a2"),"a2");
        a.put(new MapTestVo("b2"),"b2");
        a.put(new MapTestVo("c2"),"c2");
        a.put(new MapTestVo("a3"),"a3");
        a.put(new MapTestVo("b3"),"b3");
        a.put(new MapTestVo("c3"),"c3");
        a.put(new MapTestVo("a4"),"a4");
        a.put(new MapTestVo("b4"),"b4");
        a.put(new MapTestVo("c4"),"c4");
        a.put(new MapTestVo("a5"),"a5");
        a.put(new MapTestVo("b5"),"b5");
        a.put(new MapTestVo("c5"),"c5");
        a.put(new MapTestVo("d5"),"d5");
        a.put(new MapTestVo("e5"),"e5");
        a.put(new MapTestVo("f5"),"f5");
        a.put(new MapTestVo("g5"),"g5");
        a.put(new MapTestVo("h5"),"h5");
        a.put(new MapTestVo("i5"),"i5");
        a.put(new MapTestVo("j5"),"j5");
        a.put(new MapTestVo("a6"),"a6");
        a.put(new MapTestVo("b6"),"b6");
        a.put(new MapTestVo("c6"),"c6");
        a.put(new MapTestVo("d6"),"d6");
        a.put(new MapTestVo("e6"),"e6");
        a.put(new MapTestVo("f6"),"f6");
        a.put(new MapTestVo("g6"),"g6");
        a.put(new MapTestVo("h6"),"h6");
        a.put(new MapTestVo("i6"),"i6");


        Set s = a.keySet();


        System.out.println(a.get(new MapTestVo("c2")));
        System.out.println(a.get(new MapTestVo("i6")));
        /*a.put("a","a");
        a.put("b","b");
        a.put("c","c");
        a.put("a1","a1");
        a.put("b1","b1");
        a.put("c1","c1");
        a.put("a2","a2");
        a.put("b2","b2");
        a.put("c2","c2");
        a.put("a3","a3");
        a.put("b3","b3");
        a.put("c3","c3");
        a.put("a4","a4");
        a.put("b4","b4");
        a.put("c4","c4");
        a.put("a5","a5");
        a.put("b5","b5");
        a.put("c5","c5");
        a.put("d5","d5");
        a.put("e5","e5");
        a.put("f5","f5");
        a.put("g5","g5");
        a.put("h5","h5");
        a.put("i5","i5");
        a.put("j5","j5");
        a.put("a6","a6");
        a.put("b6","b6");
        a.put("c6","c6");
        a.put("d6","d6");
        a.put("e6","e6");
        a.put("f6","f6");
        a.put("g6","g6");
        a.put("h6","h6");
        a.put("i6","i6");
        a.put("j6","j6");
        a.put("a7","a7");
        a.put("b7","b7");
        a.put("c7","c7");
        a.put("d7","d7");
        a.put("e7","e7");
        a.put("f7","f7");
        a.put("g7","g7");
        a.put("h7","h7");
        a.put("i7","i7");
        a.put("j7","j7");
        a.put("a8","a8");
        a.put("b8","b8");
        a.put("c8","c8");
        a.put("d8","d8");
        a.put("e8","e8");
        a.put("f8","f8");
        a.put("g8","g8");
        a.put("h8","h8");
        a.put("i8","i8");
        a.put("j8","j8");
        a.put("a9","a9");
        a.put("b9","b9");
        a.put("c9","c9");
        a.put("d9","d9");
        a.put("e9","e9");
        a.put("f9","f9");
        a.put("g9","g9");
        a.put("h9","h9");
        a.put("i9","i9");
        a.put("j9","j9");
        a.put("a10","a10");
        a.put("b10","b10");
        a.put("c10","c10");
        a.put("d10","d10");
        a.put("e10","e10");
        a.put("f10","f10");
        a.put("g10","g10");
        a.put("h10","h10");
        a.put("i10","i10");
        a.put("j10","j10");
        a.put("a11","a11");
        a.put("b11","b11");
        a.put("c11","c11");
        a.put("d11","d11");
        a.put("e11","e11");
        a.put("f11","f11");
        a.put("g11","g11");
        a.put("h11","h11");
        a.put("i11","i11");
        a.put("j11","j11");
        a.put("a12","a12");
        a.put("b12","b12");
        a.put("c12","c12");
        a.put("d12","d12");
        a.put("e12","e12");
        a.put("f12","f12");
        a.put("g12","g12");
        a.put("h12","h12");
        a.put("i12","i12");
        a.put("j12","j12");
        a.put("a13","a13");
        a.put("b13","b13");
        a.put("c13","c13");
        a.put("d13","d13");
        a.put("e13","e13");
        a.put("f13","f13");
        a.put("g13","g13");
        a.put("h13","h13");
        a.put("i13","i13");
        a.put("j13","j13");
        a.put("a14","a14");
        a.put("b14","b14");
        a.put("c14","c14");
        a.put("d14","d14");
        a.put("e14","e14");
        a.put("f14","f14");
        a.put("g14","g14");
        a.put("h14","h14");
        a.put("i14","i14");
        a.put("j14","j14");
        a.put("a15","a15");
        a.put("b15","b15");
        a.put("c15","c15");
        a.put("d15","d15");
        a.put("e15","e15");
        a.put("f15","f15");
        a.put("g15","g15");
        a.put("h15","h15");
        a.put("i15","i15");
        a.put("j15","j15");
        a.put("a15a","a15a");
        a.put("b15a","b15a");
        a.put("c15a","c15a");
        a.put("d15a","d15a");
        a.put("e15a","e15a");
        a.put("f15a","f15a");
        a.put("g15a","g15a");
        a.put("h15a","h15a");
        a.put("i15a","i15a");
        a.put("j15a","j15a");
        a.put("a15b","a15b");
        a.put("b15b","b15b");
        a.put("c15b","c15b");
        a.put("d15b","d15b");
        a.put("e15b","e15b");
        a.put("f15b","f15b");
        a.put("g15b","g15b");
        a.put("h15b","h15b");
        a.put("i15b","i15b");
        a.put("j15b","j15b");
        a.put("a15c","a15c");
        a.put("b15c","b15c");
        a.put("c15c","c15c");
        a.put("d15c","d15c");
        a.put("e15c","e15c");
        a.put("f15c","f15c");
        a.put("g15c","g15c");
        a.put("h15c","h15c");
        a.put("i15c","i15c");
        a.put("j15c","j15c");
        a.put("a15d","a15d");
        a.put("b15d","b15d");
        a.put("c15d","c15d");
        a.put("d15d","d15d");
        a.put("e15d","e15d");
        a.put("f15d","f15d");
        a.put("g15d","g15d");
        a.put("h15d","h15d");
        a.put("i15d","i15d");
        a.put("j15d","j15d");
        a.put("a16","a16");
        a.put("b16","b16");
        a.put("c16","c16");
        a.put("d16","d16");
        a.put("e16","e16");
        a.put("f16","f16");
        a.put("g16","g16");
        a.put("h16","h16");
        a.put("i16","i16");
        a.put("j16","j16");
        a.put("a16a","a16a");
        a.put("b16a","b16a");
        a.put("c16a","c16a");
        a.put("d16a","d16a");
        a.put("e16a","e16a");
        a.put("f16a","f16a");
        a.put("g16a","g16a");
        a.put("h16a","h16a");
        a.put("i16a","i16a");
        a.put("j16a","j16a");
        a.put("a16b","a16b");
        a.put("b16b","b16b");
        a.put("c16b","c16b");
        a.put("d16b","d16b");
        a.put("e16b","e16b");
        a.put("f16b","f16b");
        a.put("g16b","g16b");
        a.put("h16b","h16b");
        a.put("i16b","i16b");
        a.put("j16b","j16b");
        a.put("a16c","a16c");
        a.put("b16c","b16c");
        a.put("c16c","c16c");
        a.put("d16c","d16c");
        a.put("e16c","e16c");
        a.put("f16c","f16c");
        a.put("g16c","g16c");
        a.put("h16c","h16c");
        a.put("i16c","i16c");
        a.put("j16c","j16c");
        a.put("a16d","a16d");
        a.put("b16d","b16d");
        a.put("c16d","c16d");
        a.put("d16d","d16d");
        a.put("e16d","e16d");
        a.put("f16d","f16d");
        a.put("g16d","g16d");
        a.put("h16d","h16d");
        a.put("i16d","i16d");
        a.put("j16d","j16d");
        a.put("a17","a17");
        a.put("b17","b17");
        a.put("c17","c17");
        a.put("d17","d17");
        a.put("e17","e17");
        a.put("f17","f17");
        a.put("g17","g17");
        a.put("h17","h17");
        a.put("i17","i17");
        a.put("j17","j17");
        a.put("a17a","a17a");
        a.put("b17a","b17a");
        a.put("c17a","c17a");
        a.put("d17a","d17a");
        a.put("e17a","e17a");
        a.put("f17a","f17a");
        a.put("g17a","g17a");
        a.put("h17a","h17a");
        a.put("i17a","i17a");
        a.put("j17a","j17a");
        a.put("a17b","a17b");
        a.put("b17b","b17b");
        a.put("c17b","c17b");
        a.put("d17b","d17b");
        a.put("e17b","e17b");
        a.put("f17b","f17b");
        a.put("g17b","g17b");
        a.put("h17b","h17b");
        a.put("i17b","i17b");
        a.put("j17b","j17b");
        a.put("a17c","a17c");
        a.put("b17c","b17c");
        a.put("c17c","c17c");
        a.put("d17c","d17c");
        a.put("e17c","e17c");
        a.put("f17c","f17c");
        a.put("g17c","g17c");
        a.put("h17c","h17c");
        a.put("i17c","i17c");
        a.put("j17c","j17c");
        a.put("a17d","a17d");
        a.put("b17d","b17d");
        a.put("c17d","c17d");
        a.put("d17d","d17d");
        a.put("e17d","e17d");
        a.put("f17d","f17d");
        a.put("g17d","g17d");
        a.put("h17d","h17d");
        a.put("i17d","i17d");
        a.put("j17d","j17d");
        a.put("a18","a18");
        a.put("b18","b18");
        a.put("c18","c18");
        a.put("d18","d18");
        a.put("e18","e18");
        a.put("f18","f18");
        a.put("g18","g18");
        a.put("h18","h18");
        a.put("i18","i18");
        a.put("j18","j18");
        a.put("a18a","a18a");
        a.put("b18a","b18a");
        a.put("c18a","c18a");
        a.put("d18a","d18a");
        a.put("e18a","e18a");
        a.put("f18a","f18a");
        a.put("g18a","g18a");
        a.put("h18a","h18a");
        a.put("i18a","i18a");
        a.put("j18a","j18a");
        a.put("a18b","a18b");
        a.put("b18b","b18b");
        a.put("c18b","c18b");
        a.put("d18b","d18b");
        a.put("e18b","e18b");
        a.put("f18b","f18b");
        a.put("g18b","g18b");
        a.put("h18b","h18b");
        a.put("i18b","i18b");
        a.put("j18b","j18b");
        a.put("a18c","a18c");
        a.put("b18c","b18c");
        a.put("c18c","c18c");
        a.put("d18c","d18c");
        a.put("e18c","e18c");
        a.put("f18c","f18c");
        a.put("g18c","g18c");
        a.put("h18c","h18c");
        a.put("i18c","i18c");
        a.put("j18c","j18c");
        a.put("a18d","a18d");
        a.put("b18d","b18d");
        a.put("c18d","c18d");
        a.put("d18d","d18d");
        a.put("e18d","e18d");
        a.put("f18d","f18d");
        a.put("g18d","g18d");
        a.put("h18d","h18d");
        a.put("i18d","i18d");
        a.put("j18d","j18d");
        a.put("a19","a19");
        a.put("b19","b19");
        a.put("c19","c19");
        a.put("d19","d19");
        a.put("e19","e19");
        a.put("f19","f19");
        a.put("g19","g19");
        a.put("h19","h19");
        a.put("i19","i19");
        a.put("j19","j19");
        a.put("a19a","a19a");
        a.put("b19a","b19a");
        a.put("c19a","c19a");
        a.put("d19a","d19a");
        a.put("e19a","e19a");
        a.put("f19a","f19a");
        a.put("g19a","g19a");
        a.put("h19a","h19a");
        a.put("i19a","i19a");
        a.put("j19a","j19a");
        a.put("a19b","a19b");
        a.put("b19b","b19b");
        a.put("c19b","c19b");
        a.put("d19b","d19b");
        a.put("e19b","e19b");
        a.put("f19b","f19b");
        a.put("g19b","g19b");
        a.put("h19b","h19b");
        a.put("i19b","i19b");
        a.put("j19b","j19b");
        a.put("a19c","a19c");
        a.put("b19c","b19c");
        a.put("c19c","c19c");
        a.put("d19c","d19c");
        a.put("e19c","e19c");
        a.put("f19c","f19c");
        a.put("g19c","g19c");
        a.put("h19c","h19c");
        a.put("i19c","i19c");
        a.put("j19c","j19c");
        a.put("a19d","a19d");
        a.put("b19d","b19d");
        a.put("c19d","c19d");
        a.put("d19d","d19d");
        a.put("e19d","e19d");
        a.put("f19d","f19d");
        a.put("g19d","g19d");
        a.put("h19d","h19d");
        a.put("i19d","i19d");
        a.put("j19d","j19d");
        a.put("a20","a20");
        a.put("b20","b20");
        a.put("c20","c20");
        a.put("d20","d20");
        a.put("e20","e20");
        a.put("f20","f20");
        a.put("g20","g20");
        a.put("h20","h20");
        a.put("i20","i20");
        a.put("j20","j20");
        a.put("a20a","a20a");
        a.put("b20a","b20a");
        a.put("c20a","c20a");
        a.put("d20a","d20a");
        a.put("e20a","e20a");
        a.put("f20a","f20a");
        a.put("g20a","g20a");
        a.put("h20a","h20a");
        a.put("i20a","i20a");
        a.put("j20a","j20a");
        a.put("a20b","a20b");
        a.put("b20b","b20b");
        a.put("c20b","c20b");
        a.put("d20b","d20b");
        a.put("e20b","e20b");
        a.put("f20b","f20b");
        a.put("g20b","g20b");
        a.put("h20b","h20b");
        a.put("i20b","i20b");
        a.put("j20b","j20b");
        a.put("a20c","a20c");
        a.put("b20c","b20c");
        a.put("c20c","c20c");
        a.put("d20c","d20c");
        a.put("e20c","e20c");
        a.put("f20c","f20c");
        a.put("g20c","g20c");
        a.put("h20c","h20c");
        a.put("i20c","i20c");
        a.put("j20c","j20c");
        a.put("a20d","a20d");
        a.put("b20d","b20d");
        a.put("c20d","c20d");
        a.put("d20d","d20d");
        a.put("e20d","e20d");
        a.put("f20d","f20d");
        a.put("g20d","g20d");
        a.put("h20d","h20d");
        a.put("i20d","i20d");
        a.put("j20d","j20d");*/

    }

    @Test
    public void concurrentHashMapTest(){
        Map a = new ConcurrentHashMap();
        a.put("a","a");
        a.put("b","b");
        a.put("c","c");
        a.put("d","d");
        a.put("e","e");
        a.put("f","f");
        a.put("g","g");

        a.put("a1","a1");
        a.put("b1","b1");
        a.put("c1","c1");
        a.put("d1","d1");
        a.put("e1","e1");
        a.put("f1","f1");
        a.put("g1","g1");

        a.put("a2","a2");
        a.put("b2","b2");
        a.put("c2","c2");
        a.put("d2","d2");
        a.put("e2","e2");
        a.put("f2","f2");
        a.put("g2","g2");

        a.put("a3","a3");
        a.put("b3","b3");
        a.put("c3","c3");
        a.put("d3","d3");
        a.put("e3","e3");
        a.put("f3","f3");
        a.put("g3","g3");


    }

    @Test
    public void hashTableTest(){

        Hashtable ht = new Hashtable();

        ht.put("a","a");
        ht.put("b","b");
        ht.put("c","c");
        ht.put("d","d");


    }
}
